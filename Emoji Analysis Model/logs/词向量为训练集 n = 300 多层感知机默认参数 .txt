D:\Users\Young\AppData\Local\Programs\Python\Python37\python.exe "D:\Program Files\JetBrains\PyCharm 2018.3.5\helpers\pydev\pydevconsole.py" --mode=client --port=63050
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['E:\\大三下\\大作业\\数据挖掘\\Emoji Analysis Model', 'E:/大三下/大作业/数据挖掘/Emoji Analysis Model'])
PyDev console: starting.
Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32
runfile('E:/大三下/大作业/数据挖掘/Emoji Analysis Model/neural_network.py', wdir='E:/大三下/大作业/数据挖掘/Emoji Analysis Model')
dsize= 300
models/sentence_vec_300d.npy
models/random_forest_third_tree_20_depth_20300.pickle
得到向量，开始训练：
inbalanced ovr
D:\Users\Young\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\utils\deprecation.py:58: DeprecationWarning: Class Imputer is deprecated; Imputer was deprecated in version 0.20 and will be removed in 0.22. Import impute.SimpleImputer from sklearn instead.
  warnings.warn(msg, category=DeprecationWarning)
D:\Users\Young\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\utils\deprecation.py:58: DeprecationWarning: Class Imputer is deprecated; Imputer was deprecated in version 0.20 and will be removed in 0.22. Import impute.SimpleImputer from sklearn instead.
  warnings.warn(msg, category=DeprecationWarning)
round 0 --------------------
Running time: 17.734375 Seconds
score = 0.1657842603426903
round 1 --------------------
Running time: 4302.171875 Seconds
score = 0.162273943719082
round 2 --------------------
Running time: 12572.109375 Seconds
score = 0.1601538515008631
round 3 --------------------
Running time: 16193.625 Seconds
score = 0.15840448579074806
round 4 --------------------
Running time: 31725.0625 Seconds
score = 0.16551971824458964
round 5 --------------------
Running time: 35719.53125 Seconds
score = 0.16032948700125121
round 6 --------------------
Running time: 43070.109375 Seconds
D:\Users\Young\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\neural_network\multilayer_perceptron.py:562: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.
  % self.max_iter, ConvergenceWarning)
score = 0.1567496176838593
round 7 --------------------
Running time: 60958.953125 Seconds
score = 0.16351545484035404
round 8 --------------------
Running time: 71701.796875 Seconds
score = 0.16046851105241206
round 9 --------------------
Running time: 76468.875 Seconds
score = 0.1602020482876871
D:\Users\Young\AppData\Local\Programs\Python\Python37\lib\site-packages\sklearn\metrics\classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.
  'precision', 'predicted', average, warn_for)
              precision    recall  f1-score   support
         0.0       0.00      0.00      0.00       441
         1.0       0.47      0.41      0.43      1520
         2.0       0.00      0.00      0.00       681
         3.0       0.24      0.64      0.34      9084
         4.0       0.00      0.00      0.00       260
         5.0       0.17      0.09      0.12       361
         6.0       0.27      0.03      0.05      1636
         7.0       0.22      0.04      0.07       315
         8.0       0.81      0.12      0.21       535
         9.0       0.22      0.01      0.02       867
        10.0       0.07      0.00      0.00      1648
        11.0       0.00      0.00      0.00       542
        12.0       0.13      0.16      0.14      4053
        13.0       0.00      0.00      0.00       666
        14.0       0.14      0.18      0.16      4325
        15.0       0.06      0.01      0.02      1660
        16.0       0.60      0.06      0.11      3089
        17.0       0.08      0.02      0.03      1244
        18.0       0.14      0.10      0.11      1440
        19.0       0.42      0.05      0.10      1251
        20.0       0.12      0.01      0.02       666
        21.0       0.16      0.04      0.06       347
        22.0       0.00      0.00      0.00       850
        23.0       0.07      0.01      0.01      2686
        24.0       0.00      0.00      0.00      1653
        25.0       0.00      0.00      0.00       261
        26.0       0.00      0.00      0.00       740
        27.0       0.09      0.00      0.01      1850
        28.0       0.00      0.00      0.00      1139
        29.0       0.17      0.18      0.18      5698
        30.0       0.13      0.06      0.08      1934
        31.0       0.06      0.01      0.01      2497
        32.0       0.00      0.00      0.00       713
        33.0       0.21      0.20      0.20       473
        34.0       0.07      0.26      0.11      3417
        35.0       0.12      0.57      0.20      4424
        36.0       0.00      0.00      0.00       535
        37.0       0.13      0.13      0.13       660
        38.0       0.27      0.15      0.19       946
        39.0       0.00      0.00      0.00       480
        40.0       0.04      0.00      0.01       647
        41.0       0.00      0.00      0.00      1467
        42.0       0.14      0.25      0.18      1180
        43.0       0.28      0.02      0.04       450
        44.0       0.07      0.00      0.00       424
        45.0       0.07      0.00      0.00       627
        46.0       0.00      0.00      0.00       781
        47.0       0.14      0.00      0.01       365
        48.0       0.00      0.00      0.00       242
        49.0       0.22      0.00      0.01       765
        50.0       0.00      0.00      0.00       858
        51.0       0.00      0.00      0.00       162
        52.0       0.07      0.02      0.03      2351
        53.0       0.00      0.00      0.00       251
        54.0       0.46      0.27      0.34       803
        55.0       0.00      0.00      0.00       474
        56.0       0.00      0.00      0.00       237
        57.0       0.00      0.00      0.00       217
        58.0       0.21      0.01      0.01       903
        59.0       0.02      0.00      0.00       424
        60.0       0.15      0.01      0.02       686
        61.0       0.00      0.00      0.00       671
        62.0       0.50      0.00      0.00      1045
        63.0       0.00      0.00      0.00       200
        64.0       0.00      0.00      0.00       333
        65.0       0.00      0.00      0.00       162
        66.0       0.17      0.00      0.01       245
        67.0       0.00      0.00      0.00       282
        68.0       0.00      0.00      0.00       581
        69.0       1.00      0.00      0.00       404
        70.0       0.00      0.00      0.00       293
        71.0       0.00      0.00      0.00       200
   micro avg       0.16      0.16      0.16     86317
   macro avg       0.13      0.06      0.05     86317
weighted avg       0.16      0.16      0.11     86317
max(scores)
0.1657842603426903
import csv_writer
for i in range(10):
    with open('models/MLPClassifier/nn_default_300d_model'+str(i)+'.pickle', 'wb') as fp:
        pickle.dump(models[i], fp)
        
